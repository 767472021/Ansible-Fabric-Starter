version: '2'
volumes:
  explorer-db.{{ org }}.{{ global_domain }}:
  explorer.{{ org }}.{{ global_domain }}:
services:
  explorer-db.{{ org }}.{{ global_domain }}:
    image: hyperledger/explorer-db:{{ hl_explorer_version }}
    container_name: explorer-db.{{ org }}.{{ global_domain }}
    restart: {{ docker_restart_policy }}
    environment:
    # hyperledger explorer configs (used in migration scripts)
    - DATABASE_DATABASE=fabricexplorer
    - DATABASE_USERNAME=hppoc
    - DATABASE_PASSWORD=password032
    # postgresql configs:
    - POSTGRES_USER=root
    volumes:
      - explorer-db.{{ org }}.{{ global_domain }}:/var/lib/postgresql/data

  explorer.{{ org }}.{{ global_domain }}:
    image: hyperledger/explorer:{{ hl_explorer_version }}
    container_name: explorer.{{ org }}.{{ global_domain }}
    restart: {{ docker_restart_policy }}
    environment:
    - DATABASE_HOST=db
    - DATABASE_USERNAME=hppoc
    - DATABASE_PASSWD=password032
    - DISCOVERY_AS_LOCALHOST=false
    volumes:
      - {{ fabric_starter_workdir }}/artifacts/crypto-config:/fabric/crypto-config:ro
      - explorer.{{ org }}.{{ global_domain }}:/tmp/crypto
      - {{ fabric_starter_workdir }}/artifacts/explorer-config.json:/opt/explorer/app/platform/fabric/connection-profile/first-network.json:ro
    ports:
      - {{ hl_explorer_port }}:8080
    links:
      - explorer-db.{{ org }}.{{ global_domain }}:db
    depends_on:
      - explorer-db.{{ org }}.{{ global_domain }}
    extra_hosts:
{% for fabric_host in groups['nodes'] %}
{% if hostvars[fabric_host].inventory_hostname|string() != inventory_hostname|string() %}
{% if 'orderer' in hostvars[fabric_host].node_roles %}
      -  orderer{{ hostvars[fabric_host].orderer_id | default() }}.{{ global_domain }}:{{ hostvars[fabric_host].ansible_host }}
{% endif %}
{% if 'peer' in hostvars[fabric_host].node_roles %}
      -  peer0.{{ hostvars[fabric_host].org }}.{{ global_domain }}:{{ hostvars[fabric_host].ansible_host }}
{% endif %}
{% endif %}
{% endfor %}
